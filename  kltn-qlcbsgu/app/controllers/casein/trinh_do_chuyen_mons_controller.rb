# Scaffolding generated by Casein v.3.1.11

module Casein
  class TrinhDoChuyenMonsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_index_page_title")
  		@trinh_do_chuyen_mons = TrinhDoChuyenMon.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_show_page_title")
      @trinh_do_chuyen_mon = TrinhDoChuyenMon.find params[:id]
    end

    def edit
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_edit_page_title")
      @trinh_do_chuyen_mon = TrinhDoChuyenMon.find params[:id]
    end
 
    def new
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_new_page_title")
    	@trinh_do_chuyen_mon = TrinhDoChuyenMon.new
    end

    def create
      @trinh_do_chuyen_mon = TrinhDoChuyenMon.new params[:trinh_do_chuyen_mon]
    
      if @trinh_do_chuyen_mon.save
        flash[:notice] = Param.get_param_value("adding_success")
        redirect_to casein_trinh_do_chuyen_mons_path
      else
        flash.now[:warning] = Param.get_param_value("adding_false")
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_update_page_title")
      
      @trinh_do_chuyen_mon = TrinhDoChuyenMon.find params[:id]
    
      if @trinh_do_chuyen_mon.update_attributes params[:trinh_do_chuyen_mon]
        flash[:notice] = Param.get_param_value("updating_success")
        redirect_to casein_trinh_do_chuyen_mon_path(params[:id])
      else
        flash.now[:warning] = Param.get_param_value("updating_false")
        render :action => :show
      end
    end
 
    def destroy
      @trinh_do_chuyen_mon = TrinhDoChuyenMon.find params[:id]

      @trinh_do_chuyen_mon.destroy
      flash[:notice] = Param.get_param_value("deleting_success")
      redirect_to casein_trinh_do_chuyen_mons_path
    end


    def import_from_excel
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_import_from_excel_page_title")
    end

    def parse_save_from_excel
      if params[:excel_file]
        file_path = params[:excel_file]
        file = XlsUploader.new
        file.store!(file_path)

        book = Spreadsheet.open "public/#{file.store_path}"

        sheet = book.worksheet 0  # first sheet in the spreadsheet file will be used

        @errors = Hash.new
        @counter = 0
        @commit = 0
        @wrong = 0
        sheet.each 1 do |row|
          @counter += 1
          p = TrinhDoChuyenMon.new
          p.trinh_do = row[0].to_s
          p.ghi_chu = row[1].to_s

          if p.valid?
            @commit += 1
            p.save
          else
            @errors["#{@counter + 1}"] = p.errors
            @wrong += 1
          end
        end
        book.io.close
        if @wrong == 0
          flash[:notice] = "#{Param.get_param_value "import_success"} | #{Param.get_param_value "commit"}: #{@commit}/#{@counter} | #{Param.get_param_value "wrong"}: #{@wrong}"
          file.remove!
          redirect_to casein_trinh_do_chuyen_mons_path
        else
          flash[:notice] = "#{Param.get_param_value "import_success"} | #{Param.get_param_value "commit"}: #{@commit}/#{@counter} | #{Param.get_param_value "wrong"}: #{@wrong}"
          file.remove!
          render :action => 'show_result', :errors => @errors
        end

      else #if :excel_file is null
        flash[:warning] = Param.get_param_value ("let_choose_file_now")
        redirect_to import_from_excel_casein_trinh_do_chuyen_mons_path
      end

    end

    def show_result
      @casein_page_title = Param.get_param_value("trinh_do_chuyen_mon_show_result_page_title")
      @errors = Hash.new
      @errors = params[:errors]
      respond_to do |format|
        format.html
        format.json {head :no_content}
      end
    end

  end
end