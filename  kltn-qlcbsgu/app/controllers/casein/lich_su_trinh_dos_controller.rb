# Scaffolding generated by Casein v.3.1.11

module Casein
  class LichSuTrinhDosController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      search_value = params["keyword"]
      view = 10
      don_vi = 0
      page = params[:page] ||= 1

      if params["num_view"].to_s != ""
        #must be a number
        if params["num_view"].match(/^\d+$/)
          #must be greater than 0 
          if params["num_view"].to_i > 0
            #set view value for pagination
            view = params["num_view"].to_i
          end
        end
      end

      if params[:don_vi]
        don_vi = params[:don_vi].to_i if params[:don_vi].match(/^\d+$/)
      end

      order = ""
      if params["order_by"].to_s != ""
        order = params["order_by"]
        #ignore the invalid values for order queries
        if order.split(":").last != "desc" && order.split(":").count > 1
          order = ""
        else
          #convert to correct format
          #param values has been submited include colon symbol
          #e.g: order by query desc
          order = order.gsub(':', ' ')
        end
      end

      #set conditions for paginate to filter records, it's base on don_vi parameter
      paginate_conditions = ""
      paginate_conditions = ['don_vi_id = ?', don_vi] if don_vi != 0

      @can_bos = CanBoThongTin.select("id, ma_cb, ho_ten, ngay_sinh, don_vi_id, chuc_vu_id, loai_lao_dong_id").search(search_value, don_vi).paginate :page => page, :per_page => view, :conditions => paginate_conditions
    end

    def details
      ma_cb = params[:ma_cb]
      can_bo_thong_tin = CanBoThongTin.find_by_ma_cb(ma_cb)
      if can_bo_thong_tin
        @can_bo_thong_tin = can_bo_thong_tin
        @lich_su_trinh_dos =  LichSuTrinhDo.find_all_by_can_bo_thong_tin_id(can_bo_thong_tin.id)
      else
        render_404
      end
    end
    
    def edit
      @casein_page_title = Param.get_param_value "lich_su_trinh_do_edit_page_title"
      @lich_su_trinh_do = LichSuTrinhDo.find params[:id]
    end

    def show
      @casein_page_title = 'View lich su trinh do'
      @lich_su_trinh_do = LichSuTrinhDo.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new lich su trinh do'
    	@lich_su_trinh_do = LichSuTrinhDo.new
      if params[:ma_cb]
        cb = CanBoThongTin.find_by_ma_cb(params[:ma_cb])
        if cb
          @lich_su_trinh_do.can_bo_thong_tin_id = cb.id
          @is_edited = true
        end
      end
    end

    def create
      @lich_su_trinh_do = LichSuTrinhDo.new params[:lich_su_trinh_do]
    
      if @lich_su_trinh_do.save
        p = CanBoTrinhDo.find_by_can_bo_thong_tin_id(@lich_su_trinh_do.can_bo_thong_tin_id)
        if p
          p.update_attribute(:trinh_do_chuyen_mon_id, @lich_su_trinh_do.trinh_do_chuyen_mon_id)
          p.update_attribute(:chuyen_nganh_id, @lich_su_trinh_do.chuyen_nganh_id)
        end
        flash[:notice] = Param.get_param_value("adding_success")
        redirect_to details_casein_lich_su_trinh_dos_path(:ma_cb => @lich_su_trinh_do.can_bo_thong_tin.ma_cb)
      else
        flash.now[:warning] = Param.get_param_value("adding_false")
        render :action => :new
      end
    end
  
    def update
      
      @lich_su_trinh_do = LichSuTrinhDo.find params[:id]
    
      if @lich_su_trinh_do.update_attributes params[:lich_su_trinh_do]
        lich_su = LichSuTrinhDo.where(:can_bo_thong_tin_id => @lich_su_trinh_do.can_bo_thong_tin_id).order("created_at").last
        if lich_su.id == @lich_su_trinh_do.id
          p = CanBoTrinhDo.find_by_can_bo_thong_tin_id(@lich_su_trinh_do.can_bo_thong_tin_id)
          if p
            p.update_attribute(:trinh_do_chuyen_mon_id, @lich_su_trinh_do.trinh_do_chuyen_mon_id)
            p.update_attribute(:chuyen_nganh_id, @lich_su_trinh_do.chuyen_nganh_id)
          end
        end
        flash[:notice] = Param.get_param_value("updating_success")
        redirect_to details_casein_lich_su_trinh_dos_path(:ma_cb => @lich_su_trinh_do.can_bo_thong_tin.ma_cb)
      else
        flash.now[:warning] = Param.get_param_value("updating_false")
        render :action => :show
      end
    end
 
    def destroy
      @lich_su_trinh_do = LichSuTrinhDo.find params[:id]

      @lich_su_trinh_do.destroy
      flash[:notice] = Param.get_param_value("deleting_success")
      redirect_to details_casein_lich_su_trinh_dos_path(:ma_cb => @lich_su_trinh_do.can_bo_thong_tin.ma_cb)
    end
  
  end
end