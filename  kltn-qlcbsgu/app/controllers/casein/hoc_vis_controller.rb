# Scaffolding generated by Casein v.3.1.11

module Casein
  class HocVisController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = Param.get_param_value("hoc_vi_index_page_title")
  		@hoc_vis = HocVi.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = Param.get_param_value("hoc_vi_show_page_title")
      @hoc_vi = HocVi.find params[:id]
    end
 
    def new
      @casein_page_title = Param.get_param_value("hoc_vi_new_page_title")
    	@hoc_vi = HocVi.new
    end

    def create
      @hoc_vi = HocVi.new params[:hoc_vi]
    
      if @hoc_vi.save
        flash[:notice] = Param.get_param_value("adding_success")
        redirect_to casein_hoc_vis_path
      else
        flash.now[:warning] = Param.get_param_value("adding_false")
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = Param.get_param_value("hoc_vi_update_page_title")
      
      @hoc_vi = HocVi.find params[:id]
    
      if @hoc_vi.update_attributes params[:hoc_vi]
        flash[:notice] = Param.get_param_value("updating_success")
        redirect_to casein_hoc_vis_path
      else
        flash.now[:warning] = Param.get_param_value("updating_false")
        render :action => :show
      end
    end
 
    def destroy
      @hoc_vi = HocVi.find params[:id]

      @hoc_vi.destroy
      flash[:notice] = Param.get_param_value("deleting_false")
      redirect_to casein_hoc_vis_path
    end
  
  end
end