# Scaffolding generated by Casein v.3.1.11

module Casein
  class CanBoLiLichCtsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Can bo li lich cts'
  		@can_bo_li_lich_cts = CanBoLiLichCt.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View can bo li lich ct'
      @can_bo_li_lich_ct = CanBoLiLichCt.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new can bo li lich ct'
    	@can_bo_li_lich_ct = CanBoLiLichCt.new
    end

    def create
      @can_bo_li_lich_ct = CanBoLiLichCt.new params[:can_bo_li_lich_ct]
    
      if @can_bo_li_lich_ct.save
        flash[:notice] = 'Can bo li lich ct created'
        redirect_to casein_can_bo_li_lich_cts_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new can bo li lich ct'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update can bo li lich ct'
      
      @can_bo_li_lich_ct = CanBoLiLichCt.find params[:id]
    
      if @can_bo_li_lich_ct.update_attributes params[:can_bo_li_lich_ct]
        flash[:notice] = 'Can bo li lich ct has been updated'
        redirect_to casein_can_bo_li_lich_cts_path
      else
        flash.now[:warning] = 'There were problems when trying to update this can bo li lich ct'
        render :action => :show
      end
    end
 
    def destroy
      @can_bo_li_lich_ct = CanBoLiLichCt.find params[:id]

      @can_bo_li_lich_ct.destroy
      flash[:notice] = 'Can bo li lich ct has been deleted'
      redirect_to casein_can_bo_li_lich_cts_path
    end
  
  end
end