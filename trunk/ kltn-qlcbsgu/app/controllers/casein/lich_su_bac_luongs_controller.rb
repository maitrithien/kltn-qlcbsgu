# Scaffolding generated by Casein v.3.1.11

module Casein
  class LichSuBacLuongsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Lich su bac luongs'
      search_value = params["keyword"]
      if search_value != nil
        @lich_su_bac_luongs = LichSuBacLuong.search(search_value).paginate(:per_page => 10, :page => params[:page],:order=> :can_bo_thong_tin_id)
        @lich_su_bac_luongs_xls = LichSuBacLuong.search(search_value)
        if @lich_su_bac_luongs.count == 0
          flash.now[:warning] = Param.get_param_value("searching_has_no_result")
          @lich_su_bac_luongs = LichSuBacLuong.paginate :page => params[:page], :per_page => 10 ,:order=> :can_bo_thong_tin_id
          @lich_su_bac_luongs_xls = LichSuBacLuong.all
        else
          flash.now[:notice] = "#{Param.get_param_value("number_searching_result")} #{@lich_su_bac_luongs.count}"
        end
      else
        @lich_su_bac_luongs = LichSuBacLuong.paginate :page => params[:page], :per_page => 10 ,:order=> :can_bo_thong_tin_id
        @lich_su_bac_luongs_xls = LichSuBacLuong.all
      end

      respond_to do |format|
        format.html
        format.xls {
          can_bo = Spreadsheet::Workbook.new
          list = can_bo.create_worksheet :name => 'Lich Su Bac Luong'
          list.row(0).concat %w{Ma_can_bo Can_bo Ngach Bac_luong Ngay_thay_doi Ghi_chu}
          @lich_su_bac_luongs_xls.each_with_index { |lichsu, i|
            list.row(i+1).push lichsu.can_bo_thong_tin.ma_cb,lichsu.can_bo_thong_tin.ho_ten,lichsu.bac_luong.ngach.ten_ngach,lichsu.bac_luong.bac,lichsu.ngay_thay_doi_bac,lichsu.ghi_chu
          }
          header_format = Spreadsheet::Format.new :color => :green, :weight => :bold
          list.row(0).default_format = header_format
          #output to blob object
          blob = StringIO.new("")
          can_bo.write blob
          #respond with blob object as a file
          send_data blob.string, :type => :xls, :filename => "LichSuBacLuong.xls"
        }
      end

  		#@lich_su_bac_luongs = LichSuBacLuong.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View lich su bac luong'
      @lich_su_bac_luong = LichSuBacLuong.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new lich su bac luong'
    	@lich_su_bac_luong = LichSuBacLuong.new
    end

    def create
      @lich_su_bac_luong = LichSuBacLuong.new params[:lich_su_bac_luong]
    
      if @lich_su_bac_luong.save
        flash[:notice] = Param.get_param_value("adding_success")
        redirect_to casein_lich_su_bac_luongs_path
      else
        flash.now[:warning] = Param.get_param_value("adding_false")
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update lich su bac luong'
      
      @lich_su_bac_luong = LichSuBacLuong.find params[:id]
    
      if @lich_su_bac_luong.update_attributes params[:lich_su_bac_luong]
        flash[:notice] = Param.get_param_value("updating_success")
        redirect_to casein_lich_su_bac_luongs_path
      else
        flash.now[:warning] = Param.get_param_value("updating_false")
        render :action => :show
      end
    end
 
    def destroy
      @lich_su_bac_luong = LichSuBacLuong.find params[:id]

      @lich_su_bac_luong.destroy
      flash[:notice] = Param.get_param_value("deleting_success")
      redirect_to casein_lich_su_bac_luongs_path
    end
  
  end
end