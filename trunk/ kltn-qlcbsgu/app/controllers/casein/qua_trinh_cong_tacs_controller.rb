# Scaffolding generated by Casein v.3.1.11

module Casein
  class QuaTrinhCongTacsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Qua trinh cong tacs'
  		#@qua_trinh_cong_tacs = QuaTrinhCongTac.paginate :page => params[:page]
      search_value = params["keyword"]
      if search_value != nil
        @qua_trinh_cong_tacs = QuaTrinhCongTac.search(search_value).paginate(:per_page => 10, :page => params[:page],:order=> :can_bo_thong_tin_id)
        @qua_trinh_cong_tacs_xls = QuaTrinhCongTac.search(search_value)
        if @qua_trinh_cong_tacs.count == 0
          flash.now[:warning] = Param.get_param_value("searching_has_no_result")
          @qua_trinh_cong_tacs = QuaTrinhCongTac.paginate :page => params[:page], :per_page => 10, :order=> :can_bo_thong_tin_id
          @qua_trinh_cong_tacs_xls = QuaTrinhCongTac.all
        else
          flash.now[:notice] = "#{Param.get_param_value("number_searching_result")} #{@qua_trinh_cong_tacs.count}"
        end
      else
        @qua_trinh_cong_tacs = QuaTrinhCongTac.paginate :page => params[:page], :per_page => 10,:order=> :can_bo_thong_tin_id
        @qua_trinh_cong_tacs_xls = QuaTrinhCongTac.all
      end

      respond_to do |format|
        format.html
        format.xls {
          can_bo = Spreadsheet::Workbook.new
          list = can_bo.create_worksheet :name => 'Danh sach Can Bo - Qua Trinh Cong Tac'
          list.row(0).concat %w{ID Ho_va_Ten Don_Vi Chu_Vu Thoi_Gian_Bat_Dau Thoi_Gian_Ket_Thuc}
          @qua_trinh_cong_tacs_xls.each_with_index { |canbo, i|
            list.row(i+1).push canbo.id, canbo.can_bo_thong_tin.ho_ten, canbo.don_vi.ten_don_vi,canbo.chuc_vu.ten_chuc_vu,canbo.thoi_gian_bat_dau, canbo.thoi_gian_ket_thuc
          }
          header_format = Spreadsheet::Format.new :color => :green, :weight => :bold
          list.row(0).default_format = header_format
          #output to blob object
          blob = StringIO.new("")
          can_bo.write blob
          #respond with blob object as a file
          send_data blob.string, :type => :xls, :filename => "Danh_Sach_Can_Bo_Qua_Trinh_Cong_tac.xls"
        }
      end

    end
  
    def show
      @casein_page_title = 'View qua trinh cong tac'
      @qua_trinh_cong_tac = QuaTrinhCongTac.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new qua trinh cong tac'
    	@qua_trinh_cong_tac = QuaTrinhCongTac.new
    end

    def create
      @qua_trinh_cong_tac = QuaTrinhCongTac.new params[:qua_trinh_cong_tac]
      if params["biet_nkt"].to_s !="1"
        @qua_trinh_cong_tac.thoi_gian_ket_thuc = nil
      end
      if @qua_trinh_cong_tac.save
        flash[:notice] = Param.get_param_value("adding_success")
        redirect_to casein_qua_trinh_cong_tacs_path
      else
        flash.now[:warning] = Param.get_param_value("adding_false")
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update qua trinh cong tac'
      
      @qua_trinh_cong_tac = QuaTrinhCongTac.find params[:id]
    
      if @qua_trinh_cong_tac.update_attributes params[:qua_trinh_cong_tac]
        flash[:notice] = Param.get_param_value("updating_success")
        redirect_to casein_qua_trinh_cong_tacs_path
      else
        flash.now[:warning] = Param.get_param_value("updating_false")
        render :action => :show
      end
    end
 
    def destroy
      @qua_trinh_cong_tac = QuaTrinhCongTac.find params[:id]

      @qua_trinh_cong_tac.destroy
      flash[:notice] = Param.get_param_value("deleting_success")
      redirect_to casein_qua_trinh_cong_tacs_path
    end
  
  end
end